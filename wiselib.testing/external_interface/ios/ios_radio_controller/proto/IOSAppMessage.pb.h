/***************************************************************************
 ** This file is part of the generic algorithm library Wiselib.           **
 ** Copyright (C) 2008,2009 by the Wisebed (www.wisebed.eu) project.      **
 **                                                                       **
 ** The Wiselib is free software: you can redistribute it and/or modify   **
 ** it under the terms of the GNU Lesser General Public License as        **
 ** published by the Free Software Foundation, either version 3 of the    **
 ** License, or (at your option) any later version.                       **
 **                                                                       **
 ** The Wiselib is distributed in the hope that it will be useful,        **
 ** but WITHOUT ANY WARRANTY; without even the implied warranty of        **
 ** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         **
 ** GNU Lesser General Public License for more details.                   **
 **                                                                       **
 ** You should have received a copy of the GNU Lesser General Public      **
 ** License along with the Wiselib.                                       **
 ** If not, see <http://www.gnu.org/licenses/>.                           **
 ***************************************************************************/

// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class Custom;
@class Custom_Builder;
@class DmsLoaded;
@class DmsLoaded_Builder;
@class DmsUpdate;
@class DmsUpdate_Builder;
@class Envelope;
@class Envelope_Builder;
@class LedColor;
@class LedColor_Builder;
@class LedTemperature;
@class LedTemperature_Builder;
@class LoginMessage;
@class LoginMessage_Builder;
@class SensorMessage;
@class SensorMessage_Builder;
@class TileLoaded;
@class TileLoaded_Builder;
typedef enum {
  Envelope_MsgTypeLogin = 1,
  Envelope_MsgTypeListenerEvent = 2,
  Envelope_MsgTypeOperationInvocationRequest = 3,
} Envelope_MsgType;

BOOL Envelope_MsgTypeIsValidValue(Envelope_MsgType value);

typedef enum {
  SensorMessage_MsgTypeLedUpdate = 1,
  SensorMessage_MsgTypeLedTemp = 2,
  SensorMessage_MsgTypeDmsUpdate = 3,
  SensorMessage_MsgTypeDmsLoaded = 4,
  SensorMessage_MsgTypeTileLoaded = 5,
  SensorMessage_MsgTypeCustom = 6,
} SensorMessage_MsgType;

BOOL SensorMessage_MsgTypeIsValidValue(SensorMessage_MsgType value);


@interface IOSAppMessageRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface Envelope : PBGeneratedMessage {
@private
  BOOL hasLoginMessage_:1;
  BOOL hasSource_:1;
  BOOL hasDestination_:1;
  BOOL hasMsgType_:1;
  LoginMessage* loginMessage;
  uint32_t source;
  uint32_t destination;
  Envelope_MsgType msgType;
  PBAppendableArray * sensorMessageArray;
}
- (BOOL) hasMsgType;
- (BOOL) hasSource;
- (BOOL) hasDestination;
- (BOOL) hasLoginMessage;
@property (readonly) Envelope_MsgType msgType;
@property (readonly) uint32_t source;
@property (readonly) uint32_t destination;
@property (readonly, retain) LoginMessage* loginMessage;
@property (readonly, retain) PBArray * sensorMessage;
- (SensorMessage*)sensorMessageAtIndex:(NSUInteger)index;

+ (Envelope*) defaultInstance;
- (Envelope*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Envelope_Builder*) builder;
+ (Envelope_Builder*) builder;
+ (Envelope_Builder*) builderWithPrototype:(Envelope*) prototype;

+ (Envelope*) parseFromData:(NSData*) data;
+ (Envelope*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Envelope*) parseFromInputStream:(NSInputStream*) input;
+ (Envelope*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Envelope*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Envelope*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Envelope_Builder : PBGeneratedMessage_Builder {
@private
  Envelope* result;
}

- (Envelope*) defaultInstance;

- (Envelope_Builder*) clear;
- (Envelope_Builder*) clone;

- (Envelope*) build;
- (Envelope*) buildPartial;

- (Envelope_Builder*) mergeFrom:(Envelope*) other;
- (Envelope_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Envelope_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMsgType;
- (Envelope_MsgType) msgType;
- (Envelope_Builder*) setMsgType:(Envelope_MsgType) value;
- (Envelope_Builder*) clearMsgType;

- (BOOL) hasSource;
- (uint32_t) source;
- (Envelope_Builder*) setSource:(uint32_t) value;
- (Envelope_Builder*) clearSource;

- (BOOL) hasDestination;
- (uint32_t) destination;
- (Envelope_Builder*) setDestination:(uint32_t) value;
- (Envelope_Builder*) clearDestination;

- (BOOL) hasLoginMessage;
- (LoginMessage*) loginMessage;
- (Envelope_Builder*) setLoginMessage:(LoginMessage*) value;
- (Envelope_Builder*) setLoginMessageBuilder:(LoginMessage_Builder*) builderForValue;
- (Envelope_Builder*) mergeLoginMessage:(LoginMessage*) value;
- (Envelope_Builder*) clearLoginMessage;

- (PBAppendableArray *)sensorMessage;
- (SensorMessage*)sensorMessageAtIndex:(NSUInteger)index;
- (Envelope_Builder *)addSensorMessage:(SensorMessage*)value;
- (Envelope_Builder *)setSensorMessageArray:(NSArray *)array;
- (Envelope_Builder *)setSensorMessageValues:(const SensorMessage* *)values count:(NSUInteger)count;
- (Envelope_Builder *)clearSensorMessage;
@end

@interface LoginMessage : PBGeneratedMessage {
@private
  BOOL hasLogin_:1;
  BOOL hasUser_:1;
  BOOL hasPwd_:1;
  BOOL hasDeviseId_:1;
  BOOL login_:1;
  NSString* user;
  NSString* pwd;
  uint32_t deviseId;
}
- (BOOL) hasLogin;
- (BOOL) hasUser;
- (BOOL) hasPwd;
- (BOOL) hasDeviseId;
- (BOOL) login;
@property (readonly, retain) NSString* user;
@property (readonly, retain) NSString* pwd;
@property (readonly) uint32_t deviseId;

+ (LoginMessage*) defaultInstance;
- (LoginMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LoginMessage_Builder*) builder;
+ (LoginMessage_Builder*) builder;
+ (LoginMessage_Builder*) builderWithPrototype:(LoginMessage*) prototype;

+ (LoginMessage*) parseFromData:(NSData*) data;
+ (LoginMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginMessage*) parseFromInputStream:(NSInputStream*) input;
+ (LoginMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LoginMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LoginMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LoginMessage_Builder : PBGeneratedMessage_Builder {
@private
  LoginMessage* result;
}

- (LoginMessage*) defaultInstance;

- (LoginMessage_Builder*) clear;
- (LoginMessage_Builder*) clone;

- (LoginMessage*) build;
- (LoginMessage*) buildPartial;

- (LoginMessage_Builder*) mergeFrom:(LoginMessage*) other;
- (LoginMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LoginMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLogin;
- (BOOL) login;
- (LoginMessage_Builder*) setLogin:(BOOL) value;
- (LoginMessage_Builder*) clearLogin;

- (BOOL) hasUser;
- (NSString*) user;
- (LoginMessage_Builder*) setUser:(NSString*) value;
- (LoginMessage_Builder*) clearUser;

- (BOOL) hasPwd;
- (NSString*) pwd;
- (LoginMessage_Builder*) setPwd:(NSString*) value;
- (LoginMessage_Builder*) clearPwd;

- (BOOL) hasDeviseId;
- (uint32_t) deviseId;
- (LoginMessage_Builder*) setDeviseId:(uint32_t) value;
- (LoginMessage_Builder*) clearDeviseId;
@end

@interface SensorMessage : PBGeneratedMessage {
@private
  BOOL hasTimestamp_:1;
  BOOL hasLedColor_:1;
  BOOL hasLedTemperature_:1;
  BOOL hasDmsLoaded_:1;
  BOOL hasTileLoaded_:1;
  BOOL hasCustom_:1;
  BOOL hasId_:1;
  BOOL hasMsgType_:1;
  uint64_t timestamp;
  LedColor* ledColor;
  LedTemperature* ledTemperature;
  DmsLoaded* dmsLoaded;
  TileLoaded* tileLoaded;
  Custom* custom;
  uint32_t id;
  SensorMessage_MsgType msgType;
  PBAppendableArray * dmsUpdateArray;
}
- (BOOL) hasMsgType;
- (BOOL) hasId;
- (BOOL) hasTimestamp;
- (BOOL) hasLedColor;
- (BOOL) hasLedTemperature;
- (BOOL) hasDmsLoaded;
- (BOOL) hasTileLoaded;
- (BOOL) hasCustom;
@property (readonly) SensorMessage_MsgType msgType;
@property (readonly) uint32_t id;
@property (readonly) uint64_t timestamp;
@property (readonly, retain) LedColor* ledColor;
@property (readonly, retain) LedTemperature* ledTemperature;
@property (readonly, retain) PBArray * dmsUpdate;
@property (readonly, retain) DmsLoaded* dmsLoaded;
@property (readonly, retain) TileLoaded* tileLoaded;
@property (readonly, retain) Custom* custom;
- (DmsUpdate*)dmsUpdateAtIndex:(NSUInteger)index;

+ (SensorMessage*) defaultInstance;
- (SensorMessage*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (SensorMessage_Builder*) builder;
+ (SensorMessage_Builder*) builder;
+ (SensorMessage_Builder*) builderWithPrototype:(SensorMessage*) prototype;

+ (SensorMessage*) parseFromData:(NSData*) data;
+ (SensorMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SensorMessage*) parseFromInputStream:(NSInputStream*) input;
+ (SensorMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (SensorMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (SensorMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface SensorMessage_Builder : PBGeneratedMessage_Builder {
@private
  SensorMessage* result;
}

- (SensorMessage*) defaultInstance;

- (SensorMessage_Builder*) clear;
- (SensorMessage_Builder*) clone;

- (SensorMessage*) build;
- (SensorMessage*) buildPartial;

- (SensorMessage_Builder*) mergeFrom:(SensorMessage*) other;
- (SensorMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (SensorMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMsgType;
- (SensorMessage_MsgType) msgType;
- (SensorMessage_Builder*) setMsgType:(SensorMessage_MsgType) value;
- (SensorMessage_Builder*) clearMsgType;

- (BOOL) hasId;
- (uint32_t) id;
- (SensorMessage_Builder*) setId:(uint32_t) value;
- (SensorMessage_Builder*) clearId;

- (BOOL) hasTimestamp;
- (uint64_t) timestamp;
- (SensorMessage_Builder*) setTimestamp:(uint64_t) value;
- (SensorMessage_Builder*) clearTimestamp;

- (BOOL) hasLedColor;
- (LedColor*) ledColor;
- (SensorMessage_Builder*) setLedColor:(LedColor*) value;
- (SensorMessage_Builder*) setLedColorBuilder:(LedColor_Builder*) builderForValue;
- (SensorMessage_Builder*) mergeLedColor:(LedColor*) value;
- (SensorMessage_Builder*) clearLedColor;

- (BOOL) hasLedTemperature;
- (LedTemperature*) ledTemperature;
- (SensorMessage_Builder*) setLedTemperature:(LedTemperature*) value;
- (SensorMessage_Builder*) setLedTemperatureBuilder:(LedTemperature_Builder*) builderForValue;
- (SensorMessage_Builder*) mergeLedTemperature:(LedTemperature*) value;
- (SensorMessage_Builder*) clearLedTemperature;

- (PBAppendableArray *)dmsUpdate;
- (DmsUpdate*)dmsUpdateAtIndex:(NSUInteger)index;
- (SensorMessage_Builder *)addDmsUpdate:(DmsUpdate*)value;
- (SensorMessage_Builder *)setDmsUpdateArray:(NSArray *)array;
- (SensorMessage_Builder *)setDmsUpdateValues:(const DmsUpdate* *)values count:(NSUInteger)count;
- (SensorMessage_Builder *)clearDmsUpdate;

- (BOOL) hasDmsLoaded;
- (DmsLoaded*) dmsLoaded;
- (SensorMessage_Builder*) setDmsLoaded:(DmsLoaded*) value;
- (SensorMessage_Builder*) setDmsLoadedBuilder:(DmsLoaded_Builder*) builderForValue;
- (SensorMessage_Builder*) mergeDmsLoaded:(DmsLoaded*) value;
- (SensorMessage_Builder*) clearDmsLoaded;

- (BOOL) hasTileLoaded;
- (TileLoaded*) tileLoaded;
- (SensorMessage_Builder*) setTileLoaded:(TileLoaded*) value;
- (SensorMessage_Builder*) setTileLoadedBuilder:(TileLoaded_Builder*) builderForValue;
- (SensorMessage_Builder*) mergeTileLoaded:(TileLoaded*) value;
- (SensorMessage_Builder*) clearTileLoaded;

- (BOOL) hasCustom;
- (Custom*) custom;
- (SensorMessage_Builder*) setCustom:(Custom*) value;
- (SensorMessage_Builder*) setCustomBuilder:(Custom_Builder*) builderForValue;
- (SensorMessage_Builder*) mergeCustom:(Custom*) value;
- (SensorMessage_Builder*) clearCustom;
@end

@interface LedColor : PBGeneratedMessage {
@private
  BOOL hasRed_:1;
  BOOL hasGreen_:1;
  BOOL hasBlue_:1;
  uint32_t red;
  uint32_t green;
  uint32_t blue;
}
- (BOOL) hasRed;
- (BOOL) hasGreen;
- (BOOL) hasBlue;
@property (readonly) uint32_t red;
@property (readonly) uint32_t green;
@property (readonly) uint32_t blue;

+ (LedColor*) defaultInstance;
- (LedColor*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LedColor_Builder*) builder;
+ (LedColor_Builder*) builder;
+ (LedColor_Builder*) builderWithPrototype:(LedColor*) prototype;

+ (LedColor*) parseFromData:(NSData*) data;
+ (LedColor*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LedColor*) parseFromInputStream:(NSInputStream*) input;
+ (LedColor*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LedColor*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LedColor*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LedColor_Builder : PBGeneratedMessage_Builder {
@private
  LedColor* result;
}

- (LedColor*) defaultInstance;

- (LedColor_Builder*) clear;
- (LedColor_Builder*) clone;

- (LedColor*) build;
- (LedColor*) buildPartial;

- (LedColor_Builder*) mergeFrom:(LedColor*) other;
- (LedColor_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LedColor_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRed;
- (uint32_t) red;
- (LedColor_Builder*) setRed:(uint32_t) value;
- (LedColor_Builder*) clearRed;

- (BOOL) hasGreen;
- (uint32_t) green;
- (LedColor_Builder*) setGreen:(uint32_t) value;
- (LedColor_Builder*) clearGreen;

- (BOOL) hasBlue;
- (uint32_t) blue;
- (LedColor_Builder*) setBlue:(uint32_t) value;
- (LedColor_Builder*) clearBlue;
@end

@interface LedTemperature : PBGeneratedMessage {
@private
  BOOL hasTemperature_:1;
  uint32_t temperature;
}
- (BOOL) hasTemperature;
@property (readonly) uint32_t temperature;

+ (LedTemperature*) defaultInstance;
- (LedTemperature*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (LedTemperature_Builder*) builder;
+ (LedTemperature_Builder*) builder;
+ (LedTemperature_Builder*) builderWithPrototype:(LedTemperature*) prototype;

+ (LedTemperature*) parseFromData:(NSData*) data;
+ (LedTemperature*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LedTemperature*) parseFromInputStream:(NSInputStream*) input;
+ (LedTemperature*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (LedTemperature*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (LedTemperature*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface LedTemperature_Builder : PBGeneratedMessage_Builder {
@private
  LedTemperature* result;
}

- (LedTemperature*) defaultInstance;

- (LedTemperature_Builder*) clear;
- (LedTemperature_Builder*) clone;

- (LedTemperature*) build;
- (LedTemperature*) buildPartial;

- (LedTemperature_Builder*) mergeFrom:(LedTemperature*) other;
- (LedTemperature_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (LedTemperature_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTemperature;
- (uint32_t) temperature;
- (LedTemperature_Builder*) setTemperature:(uint32_t) value;
- (LedTemperature_Builder*) clearTemperature;
@end

@interface DmsUpdate : PBGeneratedMessage {
@private
  BOOL hasValueAbs_:1;
  BOOL hasValueRel_:1;
  uint32_t valueAbs;
  uint32_t valueRel;
}
- (BOOL) hasValueAbs;
- (BOOL) hasValueRel;
@property (readonly) uint32_t valueAbs;
@property (readonly) uint32_t valueRel;

+ (DmsUpdate*) defaultInstance;
- (DmsUpdate*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DmsUpdate_Builder*) builder;
+ (DmsUpdate_Builder*) builder;
+ (DmsUpdate_Builder*) builderWithPrototype:(DmsUpdate*) prototype;

+ (DmsUpdate*) parseFromData:(NSData*) data;
+ (DmsUpdate*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DmsUpdate*) parseFromInputStream:(NSInputStream*) input;
+ (DmsUpdate*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DmsUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DmsUpdate*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DmsUpdate_Builder : PBGeneratedMessage_Builder {
@private
  DmsUpdate* result;
}

- (DmsUpdate*) defaultInstance;

- (DmsUpdate_Builder*) clear;
- (DmsUpdate_Builder*) clone;

- (DmsUpdate*) build;
- (DmsUpdate*) buildPartial;

- (DmsUpdate_Builder*) mergeFrom:(DmsUpdate*) other;
- (DmsUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DmsUpdate_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasValueAbs;
- (uint32_t) valueAbs;
- (DmsUpdate_Builder*) setValueAbs:(uint32_t) value;
- (DmsUpdate_Builder*) clearValueAbs;

- (BOOL) hasValueRel;
- (uint32_t) valueRel;
- (DmsUpdate_Builder*) setValueRel:(uint32_t) value;
- (DmsUpdate_Builder*) clearValueRel;
@end

@interface DmsLoaded : PBGeneratedMessage {
@private
  BOOL hasIsLoaded_:1;
  BOOL hasDmsId_:1;
  BOOL isLoaded_:1;
  uint32_t dmsId;
}
- (BOOL) hasDmsId;
- (BOOL) hasIsLoaded;
@property (readonly) uint32_t dmsId;
- (BOOL) isLoaded;

+ (DmsLoaded*) defaultInstance;
- (DmsLoaded*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DmsLoaded_Builder*) builder;
+ (DmsLoaded_Builder*) builder;
+ (DmsLoaded_Builder*) builderWithPrototype:(DmsLoaded*) prototype;

+ (DmsLoaded*) parseFromData:(NSData*) data;
+ (DmsLoaded*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DmsLoaded*) parseFromInputStream:(NSInputStream*) input;
+ (DmsLoaded*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DmsLoaded*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DmsLoaded*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DmsLoaded_Builder : PBGeneratedMessage_Builder {
@private
  DmsLoaded* result;
}

- (DmsLoaded*) defaultInstance;

- (DmsLoaded_Builder*) clear;
- (DmsLoaded_Builder*) clone;

- (DmsLoaded*) build;
- (DmsLoaded*) buildPartial;

- (DmsLoaded_Builder*) mergeFrom:(DmsLoaded*) other;
- (DmsLoaded_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DmsLoaded_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDmsId;
- (uint32_t) dmsId;
- (DmsLoaded_Builder*) setDmsId:(uint32_t) value;
- (DmsLoaded_Builder*) clearDmsId;

- (BOOL) hasIsLoaded;
- (BOOL) isLoaded;
- (DmsLoaded_Builder*) setIsLoaded:(BOOL) value;
- (DmsLoaded_Builder*) clearIsLoaded;
@end

@interface TileLoaded : PBGeneratedMessage {
@private
  BOOL hasIsLoaded_:1;
  BOOL hasTileId_:1;
  BOOL isLoaded_:1;
  uint32_t tileId;
}
- (BOOL) hasTileId;
- (BOOL) hasIsLoaded;
@property (readonly) uint32_t tileId;
- (BOOL) isLoaded;

+ (TileLoaded*) defaultInstance;
- (TileLoaded*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (TileLoaded_Builder*) builder;
+ (TileLoaded_Builder*) builder;
+ (TileLoaded_Builder*) builderWithPrototype:(TileLoaded*) prototype;

+ (TileLoaded*) parseFromData:(NSData*) data;
+ (TileLoaded*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TileLoaded*) parseFromInputStream:(NSInputStream*) input;
+ (TileLoaded*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (TileLoaded*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (TileLoaded*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface TileLoaded_Builder : PBGeneratedMessage_Builder {
@private
  TileLoaded* result;
}

- (TileLoaded*) defaultInstance;

- (TileLoaded_Builder*) clear;
- (TileLoaded_Builder*) clone;

- (TileLoaded*) build;
- (TileLoaded*) buildPartial;

- (TileLoaded_Builder*) mergeFrom:(TileLoaded*) other;
- (TileLoaded_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (TileLoaded_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasTileId;
- (uint32_t) tileId;
- (TileLoaded_Builder*) setTileId:(uint32_t) value;
- (TileLoaded_Builder*) clearTileId;

- (BOOL) hasIsLoaded;
- (BOOL) isLoaded;
- (TileLoaded_Builder*) setIsLoaded:(BOOL) value;
- (TileLoaded_Builder*) clearIsLoaded;
@end

@interface Custom : PBGeneratedMessage {
@private
  BOOL hasBytes_:1;
  NSData* bytes;
}
- (BOOL) hasBytes;
@property (readonly, retain) NSData* bytes;

+ (Custom*) defaultInstance;
- (Custom*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Custom_Builder*) builder;
+ (Custom_Builder*) builder;
+ (Custom_Builder*) builderWithPrototype:(Custom*) prototype;

+ (Custom*) parseFromData:(NSData*) data;
+ (Custom*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Custom*) parseFromInputStream:(NSInputStream*) input;
+ (Custom*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Custom*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Custom*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Custom_Builder : PBGeneratedMessage_Builder {
@private
  Custom* result;
}

- (Custom*) defaultInstance;

- (Custom_Builder*) clear;
- (Custom_Builder*) clone;

- (Custom*) build;
- (Custom*) buildPartial;

- (Custom_Builder*) mergeFrom:(Custom*) other;
- (Custom_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Custom_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBytes;
- (NSData*) bytes;
- (Custom_Builder*) setBytes:(NSData*) value;
- (Custom_Builder*) clearBytes;
@end

