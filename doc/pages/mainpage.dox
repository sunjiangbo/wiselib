/** \mainpage Wiselib

\section main_intro Introduction

The Wiselib is an algorithm library for sensor networks. It contains
various algorithm classes (for instance, localization or routing) that
can be compiled for several sensor network platforms such as iSense or
Contiki, or the sensor network simulator <a
href="http://shawn.sf.net">Shawn</a>. It is completely written in C++,
and uses templates in the same way as <a
href="http://www.boost.org/">Boost</a> and <a
href="http://www.cgal.org/">CGAL</a>. This makes it possible to write
generic and platform independent code that is very efficiently
compiled for the various platforms.

We provide easy-to-use interfaces to the OS, which simplifies the
development process and decreases the need for dealing with low-level
functionality of specific hardware platforms. Algorithms can even be
run in a simulation environment first (for debugging purposes, for
example), and then compiled for real hardware platforms without
changing any line of algorithm code.

Algorithms can be directly integrated in your application. For
example, when developing an application for iSense that collects
sensor data values, a Wiselib routing algorithm can be used to route
the data to a sink. Another scenario are pure Wiselib applications: We
provide an own application_main that is called by Wiselib code, and
you can integrate algorithm implementations there. The advantage is
that these applications can be compiled for any supported platform,
without changing any line of code (instead, just makefile
targets). Similarly to the own Wiselib application, any algorithm can
be compiled as an OpenCom? component, which allows for dynamically
loading an algorithm in your application.

\section main_wlib_doc Wiselib Documentation

Basic documentation about ideas, design issues, and background
information can be found in the <a
href="http://www.wiselib.org">Wiselib Wiki</a>.

Concrete concepts (external and internal interfaces, algorithms) can
be found under menu item <a href="./modules.html">Modules</a>. All
implemented classes (models) are described in <a
href="./annotated.html">Classes</a>.

*/